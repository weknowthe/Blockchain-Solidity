// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

contract EtherWallet{

        address  public owner;

        constructor(){
            owner = msg.sender;
        }

        event Received(address, string);
               
        receive() external payable {
            emit Received(msg.sender, "msg.value");
        }

        function withdraw(uint _withdrawAmount) external {
            require(owner == msg.sender,"Caller is not Owner");
            payable(msg.sender).transfer(_withdrawAmount);
        }

        function getBalance() external view returns(uint){
             require(owner == msg.sender,"Caller is not Owner");
           return address(this).balance;
        }

}
